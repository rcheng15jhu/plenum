{"version":3,"sources":["webpack://plenum/./src/components/cell.js","webpack://plenum/./src/components/editable-cell.js","webpack://plenum/./src/components/calendar.js","webpack://plenum/./src/components/view-calendar.js","webpack://plenum/./src/components/viewable-list-item.js"],"names":["props","styles","border","width","height","textAlign","outline","unavailable","backgroundColor","undefined","opacity","tooltip","users_avail","length","id","tooltip_id","place","effect","style","margin","padding","map","element","key","className","day","value","time","data-tip","data-for","useState","avail","setAvail","firstUpdate","useRef","onAvailChange","useEffect","current","onClick","template","file","calendar","Array","i","j","dates","console","log","times","date","keyList","val","editable","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","controls","paddingLeft","spacing","paddingBottom","paddingTop","title","fontWeight","marginBottom","fab","alignItems","fabGreen","color","palette","common","white","green","paramId","parseInt","URLSearchParams","document","location","search","substring","get","isNaN","window","history","replaceState","setId","calendars","setCalendars","setFile","setEditable","React","setValue","classes","useTheme","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fetch","method","mode","then","res","json","data","onpopstate","e","state","fabs","icon","label","clsx","handleChangeIndex","component","variant","calendarTitle","qHour","index","Z","in","timeout","transitionDelay","unmountOnExit","aria-label","flexGrow","maxWidth","demo","background","paper","rounded","blue","nested","open","setOpen","divider","button","primary","edge","disablePadding","clicked"],"mappings":"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","file":"js/871.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst cell = (props) => {\n    let styles = { border: '1px solid black', width: '25px', height: '25px', textAlign: 'center', outline: 'none' }\n\n    if (props.unavailable === 'A') {\n        styles.backgroundColor = 'red'\n    }\n\n    if (props.opacity !== undefined) {\n        styles.backgroundColor = `hsla(120, 50%, 50%, ${props.opacity}`\n    }\n\n    let tooltip = (props.users_avail === undefined || !props.users_avail.length)\n        ? null \n        : <ReactTooltip id={props.tooltip_id} place=\"top\" effect=\"solid\">\n            <ul style={{margin: '0', padding: '0'}}>\n                {props.users_avail.map(element => <li key={element}>{element}</li>)}\n            </ul>\n        </ReactTooltip>\n\n    return (\n        <td>\n            <button style={styles} className={\"day\" + props.day} value={props.time} data-tip data-for={props.tooltip_id} />\n            {tooltip}\n        </td>\n    )\n\n};\n\nexport default cell","import React, {useState, useEffect, useRef} from \"react\";\n\nconst editable_cell = (props) => {\n    const [avail, setAvail] = useState(props.unavailable === 'A')\n    const firstUpdate = useRef(true);\n\n    let styles = {border: '1px solid black', width: '25px', height: '25px', textAlign: 'center', outline: 'none'}\n\n    let onAvailChange = () => undefined;\n    if(props.onAvailChange !== undefined) {\n        onAvailChange = props.onAvailChange(props.day, props.time, avail);\n    }\n    useEffect(() => {\n        if(firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n        onAvailChange()\n    }, [avail])\n\n    function flipState() {\n        setAvail(!avail)\n    }\n\n    if (avail) {\n        styles.backgroundColor = 'red'\n    }\n    return <td><button onClick={flipState} style={styles} className={\"day\" + props.day} value={avail ? props.time : -1}/></td>\n};\n\nexport default editable_cell","import React from \"react\";\n\nimport Cell from './cell'\nimport EditableCell from './editable-cell'\n\nconst calendar = (props) => {\n    let template = props.file\n\n    let calendar = new Array(12)\n\n    for (let i = 0; i < calendar.length; i++) {\n        calendar[i] = new Array(7)\n    }\n\n    for (let i = 0; i < 12; i++) {\n        for (let j = 0; j < 7; j++) {\n            calendar[i][j] = 'U'\n        }\n    }\n\n    if(template !== undefined && template.dates !== undefined) {\n        console.log(\"test\")\n        let dates = template.dates;\n        for (let i = 0; i < dates.length; i++) {\n            for (let j = 0; j < dates[i].times.length; j++) {\n                calendar[dates[i].times[j]][dates[i].date] = 'A'\n            }\n        }\n    }\n\n    const time = (val) => {\n        if (val === 0 || val === 6) {\n            return 12\n        }\n        return (val * 2) % 12\n    }\n\n    console.log(calendar)\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th/>\n                <th>Su</th>\n                <th>M</th>\n                <th>T</th>\n                <th>W</th>\n                <th>Th</th>\n                <th>F</th>\n                <th>S</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n                calendar.map((keyList, i) => (\n                    <tr key={i}>\n                        <td style={{textAlign: 'right'}}>{time(i)}</td>\n                        {(() => {\n                            if(props.editable !== undefined && props.editable === true)\n                                return keyList.map((key, j) =>\n                                    <EditableCell key={j} onAvailChange={props.onAvailChange} unavailable={key} time={i} day={j}/>\n                                )\n                            else\n                                return keyList.map((key, j) =>\n                                    <Cell key={j} unavailable={key} time={i} day={j}/>\n                                )\n                        })()}\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    )\n};\n\nexport default calendar","import React, {useState, useEffect} from \"react\";\nimport ReactDOM from 'react-dom';\nimport Calendar from \"./calendar\";\nimport Viewable_list from \"./viewable-list-item\";\nimport Header from \"./header\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { green } from '@material-ui/core/colors';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    controls: {\n        margin: \"auto\",\n        height: 60,\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n    },\n    title: {\n        fontWeight: \"bold\",\n        marginBottom: theme.spacing(4),\n    },\n    fab: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    fabGreen: {\n        color: theme.palette.common.white,\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[600],\n        },\n    },\n}));\n\nconst ViewCalendar = () => {\n\n    let getInitId = () => {\n        let paramId = parseInt(new URLSearchParams(document.location.search.substring(1)).get(\"id\"));\n        if(isNaN(paramId)) {\n            window.history.replaceState({id: -1},'','/view-calendar')\n            return -1;\n        }\n        else {\n            window.history.replaceState({id: paramId},'','/view-calendar?id=' + paramId)\n            return paramId;\n        }\n    }\n\n    const [id, setId] = useState(getInitId)\n\n    const [calendars, setCalendars] = useState([])\n\n    console.log(calendars)\n\n    const [file, setFile] = useState({})\n\n    const [editable, setEditable] = useState(false)\n    const [value, setValue] = React.useState(0);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const transitionDuration = {\n        enter: theme.transitions.duration.enteringScreen,\n        exit: theme.transitions.duration.leavingScreen,\n    };\n\n    useEffect(() => {\n        fetch('/api/calendar', {\n                method: 'GET',\n                mode: 'cors'\n            }\n        ).then(res => {\n            return res.json()\n        }).then(data => {\n            console.log(data)\n            setCalendars([...data])\n        })\n    }, [])\n\n    useEffect(() => {\n        if(id > 0) {\n            fetch('/api/calendar?id=' + id, {\n                    method: 'GET',\n                    mode: 'cors'\n                }\n            ).then(res => {\n                return res.json()\n            }).then(data => {\n                console.log(data)\n                setFile(data)\n            })\n        }\n        else {\n            setFile({})\n        }\n    }, [id, editable])\n\n    let updateActive = (id) => () => {\n        window.history.pushState({id: id},'','/view-calendar?id=' + id)\n        setId(id)\n    }\n\n    let clearCalendarView = () => {\n        window.history.pushState({id: -1},'','/view-calendar')\n        setId(-1)\n    }\n\n    window.onpopstate = (e) => {\n        setId(e.state.id)\n    }\n\n    let onAvailChange = (date, qHour, state) => () => {\n        fetch('/api/updateavailability?calendarId=' + id + \"&date=\" + date + \"&qHour=\" + qHour + \"&state=\" + (state ? 1 : 0), {\n            method: 'POST',\n            mode: 'cors'\n        }).then(res => undefined)\n    }\n\n    let calendarNames = calendars.map(calendar => {return {id: calendar.id, content: calendar.title}})\n\n    const fabs = [\n        {\n            color: 'primary',\n            className: classes.fab,\n            icon: <EditIcon className={classes.icon}/>,\n            label: 'Edit Calendar',\n        },\n        {\n            color: 'inherit',\n            className: clsx(classes.fab, classes.fabGreen),\n            icon: <DoneIcon className={classes.icon}/>,\n            label: 'Save Edits',\n        },\n    ];\n\n    const handleChangeIndex = () => {\n        editable ? setValue(0) : setValue(1);\n        setEditable(!editable);\n    };\n\n\n    return (\n        <div>\n            <Header />\n            <Card className={classes.root}>\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h4\" variant=\"h4\" className={classes.title}>\n                            Calendar: {file.calendarTitle}\n                        </Typography>\n                        {/*<Typography variant=\"subtitle1\" color=\"textSecondary\">*/}\n                        {/*    description*/}\n                        {/*</Typography>*/}\n                    </CardContent>\n                    <Card>\n                        <Calendar editable={editable} onAvailChange={onAvailChange} file={file}/>\n                    </Card>\n                    <div className={classes.controls}>\n                        {fabs.map((fab, index) => (\n                            <Zoom\n                                key={fab.color}\n                                in={value === index}\n                                timeout={transitionDuration}\n                                style={{\n                                    transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n                                }}\n                                unmountOnExit\n                            >\n                                <Fab aria-label={fab.label} className={fab.className} color={fab.color} onClick={handleChangeIndex}>\n                                    {fab.icon}\n                                </Fab>\n                            </Zoom>\n                        ))}\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n};\nexport default ViewCalendar;","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {blue} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(4, 0, 2),\n    },\n    rounded: {\n        color: '#fff',\n        backgroundColor: blue[500],\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}))\n\nconst viewable_list_item = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickList = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <div>\n            <ListItem\n                key={props.id}\n                className=\"content list\"\n                divider={true}\n                button\n                onClick={handleClickList}\n                className={`${props.id}`}>\n                <ListItemAvatar>\n                    <Avatar variant=\"rounded\" className={classes.rounded}>\n                        <DateRangeIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={`${props.content}`}\n                />\n                {open ? <ExpandLess /> : <ExpandMore />}\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\">\n                        <DeleteIcon onClick={props.delete(props.id)}/>\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested} onClick={props.clicked(props.id)}>\n                        <ListItemText primary=\"Click here to view or edit calendar (May be replaced by actual calendar view instead of a link in future. In addition, calendar descriptions may also appear here later.)\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default viewable_list_item"],"sourceRoot":""}