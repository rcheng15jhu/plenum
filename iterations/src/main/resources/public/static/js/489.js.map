{"version":3,"sources":["webpack://plenum/./src/components/aggregate-calendar.js","webpack://plenum/./src/components/list-menu.js"],"names":["props","agg","calendar","Array","i","length","j","num_avail","users_avail","num_users_in_event","Object","keys","dates","forEach","element","times","time","date","push","userName","linspace","startValue","stopValue","cardinality","arr","step","get_opacity_from_num_avail","opacities","map","rows","key","style","textAlign","val","cell","tooltip_id","opacity","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","options","classes","React","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","className","component","button","aria-haspopup","aria-controls","onClick","event","currentTarget","primary","secondary","id","keepMounted","open","Boolean","onClose","option","index","selected","onChange","handleMenuItemClick"],"mappings":"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","file":"js/489.js","sourcesContent":["import React from \"react\";\n\nimport Cell from './cell'\n\nconst aggregate_calendar = (props) => {\n    let agg = props.agg\n\n    let calendar = new Array(12)\n\n    for (let i = 0; i < calendar.length; i++) {\n        calendar[i] = new Array(7)\n    }\n\n    for (let i = 0; i < 12; i++) {\n        for (let j = 0; j < 7; j++) {\n            calendar[i][j] = {\n                num_avail: 0,\n                users_avail: []\n            }\n        }\n    }\n    let users_in_event = Object.keys(agg)\n    let num_users_in_event = users_in_event.length\n\n    for (const i in agg) {\n        agg[i].dates.forEach(element => {\n            element.times.forEach(function(time) {\n                calendar[time][element.date].num_avail = calendar[time][element.date].num_avail + 1\n                calendar[time][element.date].users_avail.push(agg[i].userName)\n            })\n        })\n    }\n\n    function linspace(startValue, stopValue, cardinality) {\n        let arr = [];\n        let step = (stopValue - startValue) / (cardinality - 1);\n        for (let i = 0; i < cardinality; i++) {\n            arr.push(startValue + (step * i));\n        }\n        return arr;\n    }\n    // for n users you need n + 1 opacities\n    function get_opacity_from_num_avail(num_avail) {\n        if (num_users_in_event <= 6) {\n            let opacities = linspace(0, 1, num_users_in_event + 1)\n            return opacities[num_avail]\n        } else {\n            let opacities = linspace(0, 1, 8)\n            if (num_avail === 0) {\n                return 0\n            } else if (num_avail === num_users_in_event) {\n                return 1\n            } else {\n                for (let i = 0; i < 6; i++) {\n                    if ((num_avail / num_users_in_event) > (i / 6) && (num_avail / num_users_in_event) < ((i + 1) / 6)) {\n                        return opacities[i + 1]\n                    }\n                }\n            }\n        }\n    }\n\n    const time = (val) => {\n        if (val === 0 || val === 6) {\n            return 12\n        }\n        return (val * 2) % 12\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th />\n                    <th>Su</th>\n                    <th>M</th>\n                    <th>T</th>\n                    <th>W</th>\n                    <th>Th</th>\n                    <th>F</th>\n                    <th>S</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    calendar.map((rows, i) => (\n                        <tr key={i}>\n                            <td style={{ textAlign: 'right' }}>{time(i)}</td>\n                            {rows.map((cell, j) => (\n                                <Cell\n                                    key={j}\n                                    tooltip_id={'' + i + j}\n                                    opacity={get_opacity_from_num_avail(calendar[i][j].num_avail)}\n                                    users_avail={calendar[i][j].users_avail}\n                                />\n                                )\n                            )}\n                        </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n        \n    )\n};\n\nexport default aggregate_calendar","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nconst options = [\n    'Show nothing',\n    'Show all notification content',\n    'Hide sensitive notification content',\n    'Hide all notification content',\n];\n\nfunction ListMenu(props) {\n    let options = props.options\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n    const handleClickListItem = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuItemClick = (event, index) => {\n        props.onChange(options[index])\n        setSelectedIndex(index);\n        setAnchorEl(null);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\">\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"lock-menu\"\n                    onClick={handleClickListItem}\n                >\n                    <ListItemText primary=\"Select calendar:\" secondary={options[selectedIndex]} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"lock-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {options.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n}\n\nexport default ListMenu"],"sourceRoot":""}