{"version":3,"sources":["webpack://plenum/./src/components/editable-cell.js","webpack://plenum/./src/components/calendar.js"],"names":["props","useState","unavailable","avail","setAvail","firstUpdate","useRef","styles","border","width","height","textAlign","outline","onAvailChange","undefined","day","time","useEffect","current","backgroundColor","onClick","style","className","value","template","file","calendar","Array","i","length","j","dates","console","log","times","date","map","keyList","key","val","editable"],"mappings":"kPA8BA,QA5BsB,SAACA,GAAU,I,IAAA,G,GACHC,cAA+B,MAAtBD,EAAME,a,EADZ,E,kzBACtBC,EADsB,KACfC,EADe,KAEvBC,GAAcC,aAAO,GAEvBC,EAAS,CAACC,OAAQ,kBAAmBC,MAAO,OAAQC,OAAQ,OAAQC,UAAW,SAAUC,QAAS,QAElGC,EAAgB,aAmBpB,YAlB2BC,IAAxBd,EAAMa,gBACLA,EAAgBb,EAAMa,cAAcb,EAAMe,IAAKf,EAAMgB,KAAMb,KAE/Dc,gBAAU,WACHZ,EAAYa,QACXb,EAAYa,SAAU,EAG1BL,MACD,CAACV,IAMAA,IACAI,EAAOY,gBAAkB,OAEtB,0BAAI,0BAAQC,QAPnB,WACIhB,GAAUD,IAMyBkB,MAAOd,EAAQe,UAAW,MAAQtB,EAAMe,IAAKQ,MAAOpB,EAAQH,EAAMgB,MAAQ,MCgDrH,EAtEiB,SAAChB,GAKd,IAJA,IAAIwB,EAAWxB,EAAMyB,KAEjBC,EAAW,IAAIC,MAAM,IAEhBC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACjCF,EAASE,GAAK,IAAID,MAAM,GAG5B,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,EAASE,GAAGE,GAAK,IAIzB,QAAgBhB,IAAbU,QAA6CV,IAAnBU,EAASO,MAAqB,CACvDC,QAAQC,IAAI,QAEZ,IADA,IAAIF,EAAQP,EAASO,MACZH,EAAI,EAAGA,EAAIG,EAAMF,OAAQD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAIC,EAAMH,GAAGM,MAAML,OAAQC,IACvCJ,EAASK,EAAMH,GAAGM,MAAMJ,IAAIC,EAAMH,GAAGO,MAAQ,IAazD,OADAH,QAAQC,IAAIP,GAER,6BACI,6BACA,0BACI,2BACA,gCACA,+BACA,+BACA,+BACA,gCACA,+BACA,iCAGJ,6BAEIA,EAASU,KAAI,SAACC,EAAST,GAAV,OACT,sBAAIU,IAAKV,GACL,sBAAIP,MAAO,CAACV,UAAW,UAzB3B,KADF4B,EA0B6CX,IAzB9B,IAARW,EACN,GAEG,EAANA,EAAW,SAwBuBzB,IAAnBd,EAAMwC,WAA6C,IAAnBxC,EAAMwC,SAC9BH,EAAQD,KAAI,SAACE,EAAKR,GAAN,OACf,gBAAC,EAAD,CAAcQ,IAAKR,EAAGjB,cAAeb,EAAMa,cAAeX,YAAaoC,EAAKtB,KAAMY,EAAGb,IAAKe,OAGvFO,EAAQD,KAAI,SAACE,EAAKR,GAAN,OACf,gBAAC,IAAD,CAAMQ,IAAKR,EAAG5B,YAAaoC,EAAKtB,KAAMY,EAAGb,IAAKe,QAlCjE,IAACS","file":"js/783.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\n\nconst editable_cell = (props) => {\n    const [avail, setAvail] = useState(props.unavailable === 'A')\n    const firstUpdate = useRef(true);\n\n    let styles = {border: '1px solid black', width: '25px', height: '25px', textAlign: 'center', outline: 'none'}\n\n    let onAvailChange = () => undefined;\n    if(props.onAvailChange !== undefined) {\n        onAvailChange = props.onAvailChange(props.day, props.time, avail);\n    }\n    useEffect(() => {\n        if(firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n        onAvailChange()\n    }, [avail])\n\n    function flipState() {\n        setAvail(!avail)\n    }\n\n    if (avail) {\n        styles.backgroundColor = 'red'\n    }\n    return <td><button onClick={flipState} style={styles} className={\"day\" + props.day} value={avail ? props.time : -1}/></td>\n};\n\nexport default editable_cell","import React from \"react\";\n\nimport Cell from './cell'\nimport EditableCell from './editable-cell'\n\nconst calendar = (props) => {\n    let template = props.file\n\n    let calendar = new Array(12)\n\n    for (let i = 0; i < calendar.length; i++) {\n        calendar[i] = new Array(7)\n    }\n\n    for (let i = 0; i < 12; i++) {\n        for (let j = 0; j < 7; j++) {\n            calendar[i][j] = 'U'\n        }\n    }\n\n    if(template !== undefined && template.dates !== undefined) {\n        console.log(\"test\")\n        let dates = template.dates;\n        for (let i = 0; i < dates.length; i++) {\n            for (let j = 0; j < dates[i].times.length; j++) {\n                calendar[dates[i].times[j]][dates[i].date] = 'A'\n            }\n        }\n    }\n\n    const time = (val) => {\n        if (val === 0 || val === 6) {\n            return 12\n        }\n        return (val * 2) % 12\n    }\n\n    console.log(calendar)\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th/>\n                <th>Su</th>\n                <th>M</th>\n                <th>T</th>\n                <th>W</th>\n                <th>Th</th>\n                <th>F</th>\n                <th>S</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n                calendar.map((keyList, i) => (\n                    <tr key={i}>\n                        <td style={{textAlign: 'right'}}>{time(i)}</td>\n                        {(() => {\n                            if(props.editable !== undefined && props.editable === true)\n                                return keyList.map((key, j) =>\n                                    <EditableCell key={j} onAvailChange={props.onAvailChange} unavailable={key} time={i} day={j}/>\n                                )\n                            else\n                                return keyList.map((key, j) =>\n                                    <Cell key={j} unavailable={key} time={i} day={j}/>\n                                )\n                        })()}\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    )\n};\n\nexport default calendar"],"sourceRoot":""}