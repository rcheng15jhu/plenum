{"version":3,"sources":["index.js"],"names":["Calendar","props","template","file","calendar","Array","i","length","j","times","date","console","log","map","keyList","key","style","textAlign","val","Cell","unavailable","styles","border","width","height","backgroundColor","App","useState","data","setData","type","onChange","e","fileReader","FileReader","readAsText","target","files","onload","result","concat","JSON","parse","dates","ReactDOM","render","document","getElementById"],"mappings":"+LAGMA,EAAW,SAACC,GAKhB,IAJA,IAAIC,EAAWD,EAAME,KAEjBC,EAAW,IAAIC,MAAM,IAEhBC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACnCF,EAASE,GAAK,IAAID,MAAM,GAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrBJ,EAASE,GAAGE,GAAK,IAIrB,IAAK,IAAIF,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACnC,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAASI,GAAGG,MAAMF,OAAQC,IAC5CJ,EAASF,EAASI,GAAGG,MAAMD,IAAIN,EAASI,GAAGI,MAAQ,IAYvD,OADAC,QAAQC,IAAIR,GAEV,+BACE,+BACE,4BACE,6BACA,kCACA,iCACA,iCACA,iCACA,kCACA,iCACA,mCAGJ,+BAEIA,EAASS,KAAI,SAACC,EAASR,GAAV,OACX,wBAAIS,IAAKT,GACP,wBAAIU,MAAO,CAACC,UAAU,UAzBpB,KADAC,EA0BoCZ,IAzBvB,IAARY,EACR,GAEK,EAANA,EAAW,IAwBPJ,EAAQD,KAAI,SAACE,EAAKP,GAAN,OACV,kBAACW,EAAD,CAAMJ,IAAKP,EAAGY,YAAaL,QA7B9B,IAACG,QAwCVC,EAAO,SAAClB,GACZ,IAAIoB,EAAS,CAAEC,OAAQ,kBAAmBC,MAAO,OAAQC,OAAQ,OAAQP,UAAW,UAIpF,MAH0B,MAAtBhB,EAAMmB,cACRC,EAAOI,gBAAkB,OAEpB,wBAAIV,IAAKd,EAAMc,IAAKC,MAAOK,KAG9BK,EAAM,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAETC,EAFS,KAEHC,EAFG,KAahB,OACA,6BACE,2BAAOC,KAAK,OAAOC,SAXA,SAAAC,GACnB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,WAAWH,EAAEI,OAAOC,MAAM,GAAI,SACzCJ,EAAWK,OAAS,SAAAN,GAClBrB,QAAQC,IAAI,kBAAmBoB,EAAEI,OAAOG,QACxCV,EAAQD,EAAKY,OAAOC,KAAKC,MAAMV,EAAEI,OAAOG,QAAQI,YAOlD,kBAAC3C,EAAD,CAAUG,KAAMyB,M,OAMpBgB,EAASC,OAAO,kBAACnB,EAAD,MAASoB,SAASC,eAAe,W","file":"static/js/main.c5ac4bdf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Calendar = (props) => {\n  let template = props.file\n\n  let calendar = new Array(12)\n\n  for (let i = 0; i < calendar.length; i++) {\n    calendar[i] = new Array(7)\n  }\n\n  for (let i = 0; i < 12; i++) {\n    for (let j = 0; j < 7; j++) {\n      calendar[i][j] = 'A'\n    }\n  }\n\n  for (let i = 0; i < template.length; i++) {\n    for (let j = 0; j < template[i].times.length; j++) {\n      calendar[template[i].times[j]][template[i].date] = 'U'\n    }\n  }\n\n  const time = (val) => {\n    if (val === 0 || val === 6) {\n      return 12\n    }\n    return (val * 2) % 12\n  }\n\n  console.log(calendar)\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n          <th>Su</th>\n          <th>M</th>\n          <th>T</th>\n          <th>W</th>\n          <th>Th</th>\n          <th>F</th>\n          <th>S</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          calendar.map((keyList, i) => (\n            <tr key={i}>\n              <td style={{textAlign:'right'}}>{time(i)}</td>\n              {\n                keyList.map((key, j) =>\n                  <Cell key={j} unavailable={key} />\n                )\n              }\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  )\n}\n\nconst Cell = (props) => {\n  let styles = { border: '1px solid black', width: '25px', height: '25px', textAlign: 'center' }\n  if (props.unavailable === 'U') {\n    styles.backgroundColor = 'red'\n  }\n  return <td key={props.key} style={styles}></td>\n}\n\nconst App = () => {\n\n  const [data, setData] = useState([])\n\n  const handleChange = e => {\n    const fileReader = new FileReader()\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      console.log(\"e.target.result\", e.target.result);\n      setData(data.concat(JSON.parse(e.target.result).dates));\n    }\n  }\n\n  return (\n  <div>\n    <input type='file' onChange={handleChange}></input>\n    <Calendar file={data}/>\n  </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}