{"version":3,"sources":["components/Cell.js","components/Calendar.js","services/CalendarManager.js","pages/makecalendar.js","index.js"],"names":["Cell","props","useState","unavailable","avail","setAvail","styles","border","width","height","textAlign","outline","backgroundColor","onClick","style","className","day","value","time","Calendar","template","file","calendar","Array","i","length","j","undefined","times","date","console","log","map","keyList","key","val","getObjToSave","objToSave","buttons","document","getElementsByClassName","forEach","button","parseInt","push","dates","uploadTemplate","content","fetch","method","headers","body","JSON","stringify","then","data","App","ReactDOM","render","getElementById"],"mappings":"uKAgBeA,EAdF,SAACC,GAAW,IAAD,EACMC,mBAA+B,MAAtBD,EAAME,aADrB,mBACbC,EADa,KACNC,EADM,KAEhBC,EAAS,CAACC,OAAQ,kBAAmBC,MAAO,OAAQC,OAAQ,OAAQC,UAAW,SAAUC,QAAS,QAStG,OAHKP,IACDE,EAAOM,gBAAkB,OAEtB,4BAAI,4BAAQC,QAPnB,WACIR,GAAUD,IAMyBU,MAAOR,EAAQS,UAAW,MAAQd,EAAMe,IAAKC,MAAOb,EAAQH,EAAMiB,MAAQ,MCsDtGC,EA/DE,SAAClB,GAKd,IAJA,IAAImB,EAAWnB,EAAMoB,KAEjBC,EAAW,IAAIC,MAAM,IAEhBC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACjCF,EAASE,GAAK,IAAID,MAAM,GAG5B,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,EAASE,GAAGE,GAAK,IAIzB,QAAgBC,IAAbP,EACC,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAASI,GAAGI,MAAMH,OAAQC,IAC1CJ,EAASF,EAASI,GAAGI,MAAMF,IAAIN,EAASI,GAAGK,MAAQ,IAa/D,OADAC,QAAQC,IAAIT,GAER,+BACI,+BACA,4BACI,6BACA,kCACA,iCACA,iCACA,iCACA,kCACA,iCACA,mCAGJ,+BAEIA,EAASU,KAAI,SAACC,EAAST,GAAV,OACT,wBAAIU,IAAKV,GACL,wBAAIV,MAAO,CAACJ,UAAW,UAzB3B,KADFyB,EA0B6CX,IAzB9B,IAARW,EACN,GAEG,EAANA,EAAW,IAwBCF,EAAQD,KAAI,SAACE,EAAKR,GAAN,OACR,kBAAC,EAAD,CAAMQ,IAAKR,EAAGvB,YAAa+B,EAAKhB,KAAMM,EAAGR,IAAKU,QA7B7D,IAACS,Q,OClBlB,SAASC,IAGL,IAFA,IAAIC,EAAY,CAChBA,MAAkB,IAFE,WAGXb,GACL,IAAMc,EAAO,YAAOC,SAASC,uBAAuB,MAAQhB,IAC5DM,QAAQC,IAAIO,GACZ,IAAIV,EAAQ,GACZU,EAAQG,SAAQ,SAAAC,GACZ,IAAIzB,EAAQ0B,SAASD,EAAOzB,OAC5Ba,QAAQC,IAAId,IACE,IAAXA,GACHW,EAAMgB,KAAK3B,MAEK,IAAjBW,EAAMH,QACLY,EAAUQ,MAAMD,KAAK,CACjBf,KAAML,EACNI,MAAOA,KAbVJ,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAiBT,OAAOa,EAwBIS,MAJf,WAZA,IAAgBC,IAaDX,IAZXY,MAAM,0BAA2B,CAC7BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KACxBO,MAAK,SAAAC,GACJzB,QAAQC,IAAIwB,OC/BLC,EAVH,WAER,OACI,6BACI,kBAAC,EAAD,MACA,4BAAQ3C,QAASiC,GAAjB,sBCJZW,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,U","file":"static/js/main.7937e937.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst Cell = (props) => {\r\n    const [avail, setAvail] = useState(props.unavailable === 'A')\r\n    let styles = {border: '1px solid black', width: '25px', height: '25px', textAlign: 'center', outline: 'none'}\r\n\r\n    function flipState() {\r\n        setAvail(!avail)\r\n    }\r\n\r\n    if (!avail) {\r\n        styles.backgroundColor = 'red'\r\n    }\r\n    return <td><button onClick={flipState} style={styles} className={\"day\" + props.day} value={avail ? props.time : -1}/></td>\r\n};\r\n\r\nexport default Cell","import React from \"react\";\r\n\r\nimport Cell from './Cell'\r\n\r\nconst Calendar = (props) => {\r\n    let template = props.file\r\n\r\n    let calendar = new Array(12)\r\n\r\n    for (let i = 0; i < calendar.length; i++) {\r\n        calendar[i] = new Array(7)\r\n    }\r\n\r\n    for (let i = 0; i < 12; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n            calendar[i][j] = 'A'\r\n        }\r\n    }\r\n\r\n    if(template !== undefined) {\r\n        for (let i = 0; i < template.length; i++) {\r\n            for (let j = 0; j < template[i].times.length; j++) {\r\n                calendar[template[i].times[j]][template[i].date] = 'U'\r\n            }\r\n        }\r\n    }\r\n\r\n    const time = (val) => {\r\n        if (val === 0 || val === 6) {\r\n            return 12\r\n        }\r\n        return (val * 2) % 12\r\n    }\r\n\r\n    console.log(calendar)\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th/>\r\n                <th>Su</th>\r\n                <th>M</th>\r\n                <th>T</th>\r\n                <th>W</th>\r\n                <th>Th</th>\r\n                <th>F</th>\r\n                <th>S</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                calendar.map((keyList, i) => (\r\n                    <tr key={i}>\r\n                        <td style={{textAlign: 'right'}}>{time(i)}</td>\r\n                        {\r\n                            keyList.map((key, j) =>\r\n                                <Cell key={j} unavailable={key} time={i} day={j}/>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default Calendar","function download(content) {\r\n    const a = document.createElement(\"a\");\r\n    const file = new Blob([JSON.stringify(content)], {type: \"application/json\"});\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = \"template.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(a.href);\r\n}\r\n\r\nfunction getObjToSave() {\r\n    let objToSave = {};\r\n    objToSave.dates = [];\r\n    for (let i = 0; i < 7; i++) {\r\n        const buttons = [...document.getElementsByClassName(\"day\" + i)];\r\n        console.log(buttons);\r\n        let times = [];\r\n        buttons.forEach(button => {\r\n            let value = parseInt(button.value);\r\n            console.log(value);\r\n            if(value !== -1)\r\n            times.push(value);\r\n        });\r\n        if(times.length !== 0) {\r\n            objToSave.dates.push({\r\n                date: i,\r\n                times: times\r\n            })\r\n        }\r\n    }\r\n    return objToSave;\r\n}\r\n\r\nfunction downloadTemplate() {\r\n    download(getObjToSave());\r\n    console.log(\"Test\");\r\n}\r\n\r\nfunction upload(content) {\r\n    fetch(\"/addcalendar?title=test\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },body: JSON.stringify(content)\r\n    }).then(data => {\r\n        console.log(data);\r\n    });\r\n}\r\n\r\nfunction uploadTemplate() {\r\n        upload(getObjToSave());\r\n}\r\n\r\nexport default uploadTemplate","import React from \"react\";\r\nimport Calendar from \"../components/Calendar\";\r\nimport uploadTemplate from \"../services/CalendarManager.js\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Calendar />\r\n            <button onClick={uploadTemplate} >Upload template!</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./pages/makecalendar\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}