# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Plenum Java CI/CD with Gradle and Deploy to Heroku

on:
  push:
    branches: [ iteration4 ]
  pull_request:
    branches: [ iteration4 ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps: 
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
      - name: install npm dependencies
        run:  (cd ./iterations/src/main/js  && npm install)
      - name: generate transpiled production frontend code
        run:  (cd ./iterations/src/main/js && npm run build)
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: create .env for dev database tests
        run:  (cd ./iterations && touch .env)
      - name: add db url to .env
        run: (cd ./iterations && echo "DEV_DB_URL=${{secrets.DEV_DB_URL}}" >> .env)
      - name: add db user to .env
        run: (cd ./iterations && echo "DEV_DB_USER=${{secrets.DEV_DB_USER}}" >> .env)
      - name: add db password to .env
        run: (cd ./iterations && echo "DEV_DB_PWORD=${{secrets.DEV_DB_PWORD}}" >> .env)
      - name: Grant execute permission for gradlew
        run: chmod +x ./iterations/gradlew
      - name: Build with Gradle
        run: (cd ./iterations && ./gradlew build jar && mv ./build/libs/iterations-1.0-SNAPSHOT.jar .)
      - name: remove .env
        run: (cd ./iterations && rm -rf .env)
      - name: Commit on the runner
        run: git config user.email "runner@github.com"; git config user.name "Runner"; git add *; git commit -m "None"
      - name: Deploy to Heroku
        run: git checkout `git subtree split -P iterations`; git push -f origin HEAD:heroku-deploy
